#!/usr/bin/env python3
import os
import sys
from pathlib import Path

def setup_environment():
    # Define paths
    env_example = Path('.env.example')
    env_file = Path('.env')
    
    # Check if .env already exists
    if env_file.exists():
        print("⚠️  .env file already exists.")
        response = input("Do you want to overwrite it? (y/n): ").lower()
        if response != 'y':
            print("Setup aborted.")
            return
    
    # Read .env.example
    try:
        with open(env_example, 'r') as f:
            env_content = f.read()
    except FileNotFoundError:
        print(f"❌ Error: {env_example} not found.")
        sys.exit(1)
    
    # Create .env file
    try:
        with open(env_file, 'w') as f:
            f.write("# Auto-generated by setup_env.py\n")
            f.write("# Please update the values below with your configuration\n\n")
            
            # Process each line in the example file
            for line in env_example.read_text().split('\n'):
                line = line.strip()
                # Skip empty lines and comments
                if not line or line.startswith('#'):
                    f.write(f"{line}\n")
                    continue
        
                # Handle variable lines
                if '=' in line:
                    if '#' in line:
                        # Handle lines with comments
                        var_part, comment = line.split('#', 1)
                        var, default = var_part.split('=', 1)
                        value = input(f"{var} [{default}]: ").strip()
                        value = value or default
                        f.write(f"{var}={value}  # {comment}\n")
                else:
                        # Handle lines without comments
                        var = line.split('=')[0]
                        value = input(f"{var}: ").strip()
                        f.write(f"{var}={value}\n")
                
                
        print(f"✅ {env_file} has been created successfully!")
        print("\nNext steps:")
        print("1. Review the .env file and make any necessary changes")
        print("2. Run database migrations: python manage.py migrate")
        print("3. Create a superuser: python manage.py createsuperuser")
        print("4. Start the development server: python manage.py runserver")
        
    except Exception as e:
        print(f"❌ Error creating .env file: {e}")
        sys.exit(1)

if __name__ == "__main__":
    print("Setting up environment variables...")
    setup_environment()
